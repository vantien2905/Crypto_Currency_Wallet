//
//  HomeViewController.swift
//  Crypto_Currency_Wallet
//
//  Created Tien Dinh on 11/06/2021.
//  Copyright Â© 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Tien Dinh
//

import UIKit

class HomeViewController: UIViewController {
    
    @IBOutlet weak var tableView    : UITableView!
    @IBOutlet weak var topView      : HomeTopView!

	var presenter: HomePresenterProtocol?
    
    var listCoin: [CoinEntity] = [] {
        didSet {
            tableView.reloadData()
        }
    }
    
    var listCoinOrigin: [CoinEntity] = []
    
    var pageType: PageType = .search
    
    weak var timer: Timer?
    
    var searchText = ""

	override func viewDidLoad() {
        super.viewDidLoad()
        configureTableView()
        setUpViews()
        presenter?.getListCoin()
        startTimer()
        hideKeyboard()
    }
    
    func startTimer() {
        timer?.invalidate()
        timer = Timer.scheduledTimer(withTimeInterval: AppConstant.countdownRefresh,
                                     repeats: true) { [weak self] _ in
            self?.presenter?.getListCoin()
        }
    }
    
    func stopTimer() {
        timer?.invalidate()
    }

    deinit {
        stopTimer()
    }
    
    private func configureTableView() {
        tableView.registerTableCell(CoinTableViewCell.self)
        tableView.dataSource = self
        tableView.rowHeight = UITableView.automaticDimension
        tableView.tableFooterView = UIView()
    }
    
    private func setUpViews() {
        topView.actionCallback = {[weak self] type in
            guard let self = self else { return }
            self.pageType = type
            switch type {
            case .search:
                self.listCoin = self.listCoinOrigin
            default:
                self.listCoin = self.listCoinOrigin.filter({$0.isFavorite})
            }
        }
        
        topView.searchDidChangeCallBack = {[weak self] value in
            guard let self = self else { return }
            self.searchText = value
            self.listCoin = value.isEmpty
                ? self.listCoinOrigin
                : self.listCoinOrigin.filter({$0.name&.lowercased().contains(value)
                                                || $0.base&.lowercased().contains(value)})
        }
    }
}

extension HomeViewController: HomeViewProtocol {
    func didGetListCoin(result: [CoinEntity]?, error: APIError?) {
        if let result = result {
            self.listCoinOrigin = result
            if pageType == .search {
                self.listCoin = searchText.isEmpty ? result : result.filter({$0.name&.lowercased().contains(searchText) || $0.base&.lowercased().contains(searchText)})
            } else {
                self.listCoin = result.filter({$0.isFavorite})
            }
        } else {

        }
    }
}

extension HomeViewController: UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        listCoin.isEmpty ? tableView.setEmptyView() : tableView.restore()
        return listCoin.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueTableCell(CoinTableViewCell.self)
        cell.setData(coin: listCoin[indexPath.row], indexPath: indexPath)
        cell.delegate = self
    
        return cell
    }
}

extension HomeViewController: CoinTableViewCellDelegate {
    func favoriteActionTapped(indexPath: IndexPath) {
        if pageType == .favorite {
            self.listCoin.remove(at: indexPath.row)
        }
    }
}
